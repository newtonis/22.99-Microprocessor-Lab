Lo ideal seria utilizar una iterrupcion para detectar el evento de pulsador presionado y no estar preguntando en todas las partes del programa a ver si esta presionado. Sin eso, el código sería como sigue:

Defines:

// On Board User LEDs
#define PIN_LED_RED     PORTNUM2PIN(PB,22) // PTB22

// On Board User Switches
#define PIN_SW3         PORTNUM2PIN(PA,4) // PTA4

// Extern LED
#define LED_YELLOW	PORTNUM2PIN(PB,23) // PTB23

Programa:

/* Función que se llama 1 vez, al comienzo del programa */
void App_Init (void)
{
	gpioMode(PIN_SW3, INPUT);
    gpioMode(LED_YELLOW, OUTPUT);
    gpioMode(PIN_LED_RED, OUTPUT);
    gpioWrite(LED_YELLOW, LOW);
    gpioWrite(PIN_LED_RED, HIGH);
}

/* Función que se llama constantemente en un ciclo infinito */
void App_Run (void)
{
	static int timer = 0;
	static int estado = HIGH;
	static int baliza = LOW; // Inicialmente apagado
	int estado_viejo = estado;
	timer++;
	estado = gpioRead(PIN_SW3);
	if((estado_viejo == HIGH)&&(estado == LOW)){
		if(baliza == LOW){
			baliza = HIGH;
		}else{
			baliza = LOW;
		}
	}

	delayLoop(143000UL); // 10ms

	switch(baliza){
	case LOW:
		if(gpioRead(PIN_LED_RED) == LOW){
		    gpioWrite(LED_YELLOW, LOW);
		    gpioWrite(PIN_LED_RED, HIGH);
		}
		break;
	case HIGH:
		if(timer % 100 == 0){ // Cada 1 segundo debido al delayloop
			gpioToggle(LED_YELLOW);
		}
		if(gpioRead(PIN_LED_RED) == HIGH){
			gpioWrite(PIN_LED_RED, LOW);
		}
		break;
	default:
		// Nada
		break;
	}
}